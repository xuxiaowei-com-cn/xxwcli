# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      CACHE_PATH: ~/go/pkg/mod/cache
      # 系统名称
      OS: ""
      # 时间
      YEAR_MONTH_DAY: ""
      YEAR_MONTH_DAY_HOUR: ""
      YEAR_MONTH_DAY_HOUR_MINUTE: ""
    strategy:
      matrix:
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        id: set-up-go
        with:
          go-version: 1.19

      - name: Cache Go modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          go version
          go mod download
          go build xxwcli.go
          ls

      - name: Replace String Action
        uses: frabert/replace-string-action@v2
        id: replace
        with:
          pattern: '-latest$'
          string: ${{ matrix.os }}
          replace-with: ''

      - name: Set OS variable
        id: os
        run: |
          # 设置环境变量：支持 ubuntu、macos
          echo "OS=${{ steps.replace.outputs.replaced }}" >> $GITHUB_ENV
          # 设置环境变量：支持 windows
          echo "OS=${{ steps.replace.outputs.replaced }}" >> $env:GITHUB_ENV

      - name: Show current time
        run: |
          echo "Current time:"
          echo "${{ env.GITHUB_SERVER_TIMEZONE }}"
          echo "${{ env.CURRENT_TIME }}"
          echo "Current time plus 8 hours:"
          echo "${{ env.TIME_PLUS_8H }}"
        env:
          TIME_ZONE: ${{ env.GITHUB_SERVER_TIMEZONE }}
          CURRENT_TIME: ${{ steps.format_time.outputs.time }}
          TIME_PLUS_8H: ${{ steps.format_time.outputs.time_plus_8h }}

      - name: Set Up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Format time
        id: format_time
        run: |
          const moment = require('moment-timezone');
          const tz = process.env.TIME_ZONE;
          const timeFormat = 'YYYYMMDDHHmm';
          const time = moment().tz(tz).format(timeFormat);
          const time_plus_8h = moment().tz(tz).add(8, 'hours').format(timeFormat);
          console.log(`CURRENT_TIME=${time}`);
          console.log(`TIME_PLUS_8H=${time_plus_8h}`);
        shell: bash
        env:
          NODE_VERSION: 14.x

      - name: Set output variables
        run: |
          echo "${{ env.CURRENT_TIME }}" >> $GITHUB_ENV
          echo "${{ env.TIME_PLUS_8H }}" >> $GITHUB_ENV

      - name: Get current date
        id: date
        run: |
          # 设置环境变量：支持 ubuntu、macos
          echo "YEAR_MONTH_DAY=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "YEAR_MONTH_DAY_HOUR=$(date +'%Y%m%d%H')" >> $GITHUB_ENV
          echo "YEAR_MONTH_DAY_HOUR_MINUTE=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
          # 设置环境变量：支持 windows
          echo "OS=${{ steps.replace.outputs.replaced }}" >> $env:GITHUB_ENV
          echo "YEAR_MONTH_DAY=$(date +'%Y%m%d')" >> $env:GITHUB_ENV
          echo "YEAR_MONTH_DAY_HOUR=$(date +'%Y%m%d%H')" >> $env:GITHUB_ENV
          echo "YEAR_MONTH_DAY_HOUR_MINUTE=$(date +'%Y%m%d%H%M')" >> $env:GITHUB_ENV
        env:
          # 设置时区：支持 ubuntu、macos
          TZ: Asia/Shanghai

      - uses: actions/upload-artifact@v3
        with:
          name: xxwcli-${{ env.OS }}-${{ env.YEAR_MONTH_DAY_HOUR_MINUTE }}
          path: |
            xxwcli
            xxwcli.exe

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            xxwcli
            xxwcli.exe
          prerelease: true
          name: ${{ env.OS }}-${{ env.YEAR_MONTH_DAY_HOUR_MINUTE }}
          tag: v-${{ env.OS }}-${{ env.YEAR_MONTH_DAY_HOUR_MINUTE }}
          token: ${{ secrets.GITHUB_TOKEN }}
